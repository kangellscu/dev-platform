version: "3.8"

networks:
  frontend:
    driver: ${NETWORKS_DRIVER}
  backend:
    driver: ${NETWORKS_DRIVER}

volumes:
  mongo-data:
    name: mongo-data
    driver: ${VOLUMES_DRIVER}

services:
  workspace:
    build:
      context: ${DOCKER_BUILD_CONTEXT_ROOT}/workspace
      args:
        - BASE_TAG=${CENTOS_TAG}
        - USER=${DEV_USER}
        - GROUP=${DEV_GROUP}
        - UID=${DEV_UID}
        - GID=${DEV_GID}
        - GIT_USER=${GIT_USER}
        - GIT_EMAIL=${GIT_EMAIL}
        - TIMEZONE=${TIMEZONE}
        - CENTOS_VERSION=${CENTOS_VERSION}
        - PYTHON_VERSION=${PYTHON_VERSION}
        - PYTHON_SOURCE_URL=${PYTHON_SOURCE_URL}
        - NODEJS_VERSION=${NODEJS_VERSION}
        - PHP_VERSION=${PHP_VERSION}
        - MONGO_VERSION=${MONGO_VERSION}
    hostname: workspace
    volumes:
      - type: bind
        source: ${CODE_ROOT_HOST}
        target: ${CODE_ROOT_CONTAINER}
        consistency: ${CODE_CONTAINER_FLAG}
      - type: tmpfs
        target: /run
      - "${SSH_PUBLIC_KEY_FILE}:/home/${DEV_USER}/.ssh/authorized_keys"
      - "${SSH_CONFIG_FILE}:/home/${DEV_USER}/.ssh/config"
      - "${SSH_PRIVATE_KEY_FILE}:/home/${DEV_USER}/.ssh/keys/${DEV_USER}"
    environment:
      CODE_ROOT_CONTAINER: ${CODE_ROOT_CONTAINER}
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    privileged: true
    tty: true
    networks:
      - frontend
      - backend
    deploy:
      replicas: 1
    command: ["/sbin/init"]

  openresty:
    build:
      context: ${DOCKER_BUILD_CONTEXT_ROOT}/openresty
      args:
        - OPENRESTY_TAG=${OPENRESTY_TAG}
        - TIMEZONE=${TIMEZONE}
    hostname: openresty
    volumes:
      - type: bind
        source: ${OPENRESTY_CONF_DIR_HOST}
        target: /etc/nginx/conf.d
      - type: bind
        source: ${CODE_ROOT_HOST}
        target: /var/www
    ports:
      - "${OPENRESTY_PORT}:80"
    tty: true
    networks:
      - frontend
  php-fpm:
    build:
      context: ${DOCKER_BUILD_CONTEXT_ROOT}/php-fpm
      args:
        - BASE_TAG=${PHP_FPM_TAG}
        - ALPINE_MIRROR=${ALPINE_MIRROR}
        - TIMEZONE=${TIMEZONE}
    hostname: php-fpm
    volumes:
      - type: bind
        source: ${CODE_ROOT_HOST}
        target: /var/www
    tty: true
    networks:
      - frontend
      - backend
  mongo:
    build:
      context: ${DOCKER_BUILD_CONTEXT_ROOT}/mongo
      args:
        - MONGO_TAG=${MONGO_TAG}
    hostname: mongo
    volumes:
      - type: volume
        source: mongo-data
        target: /data/db
        volume:
          nocopy: true
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    tty: true
    networks:
      - backend
